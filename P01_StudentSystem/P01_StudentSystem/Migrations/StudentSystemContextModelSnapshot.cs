// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_StudentSystem.Data;

#nullable disable

namespace P01_StudentSystem.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    partial class StudentSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P01_StudentSystem.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Description = "Learning c#",
                            EndDate = new DateTime(2024, 5, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(6313),
                            Name = "Programming",
                            Price = 2000.500m,
                            StartDate = new DateTime(2024, 2, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(6300)
                        },
                        new
                        {
                            CourseId = 2,
                            Description = "Fundamentals of database design",
                            EndDate = new DateTime(2024, 5, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(6326),
                            Name = "Database",
                            Price = 500.500m,
                            StartDate = new DateTime(2024, 2, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(6324)
                        },
                        new
                        {
                            CourseId = 3,
                            Description = "The Fundamentals of Networking",
                            EndDate = new DateTime(2024, 5, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(6333),
                            Name = "Computer Network",
                            Price = 1000.200m,
                            StartDate = new DateTime(2024, 2, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(6330)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeworkId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Homeworks");

                    b.HasData(
                        new
                        {
                            HomeworkId = 1,
                            Content = "Introduction to Programming Homework",
                            ContentType = 0,
                            CourseId = 1,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2024, 2, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(6858)
                        },
                        new
                        {
                            HomeworkId = 2,
                            Content = "Database Design Homework",
                            ContentType = 1,
                            CourseId = 2,
                            StudentId = 2,
                            SubmissionTime = new DateTime(2024, 2, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(6869)
                        },
                        new
                        {
                            HomeworkId = 3,
                            Content = "Computer Network Homework",
                            ContentType = 1,
                            CourseId = 3,
                            StudentId = 3,
                            SubmissionTime = new DateTime(2024, 2, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(6872)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ResourceId = 1,
                            CourseId = 1,
                            Name = "Fundamentals for Beginners video",
                            ResourceType = 0,
                            Url = "http://example.com/video"
                        },
                        new
                        {
                            ResourceId = 2,
                            CourseId = 2,
                            Name = "Database design basics",
                            ResourceType = 2,
                            Url = "http://example.com/document"
                        },
                        new
                        {
                            ResourceId = 3,
                            CourseId = 3,
                            Name = "Computer Fundamentals Tutorial",
                            ResourceType = 2,
                            Url = "http://example.com/document1"
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Birthday = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mahmoud Bakri",
                            PhoneNumber = "0111236574",
                            RegisteredOn = new DateTime(2024, 2, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(5429)
                        },
                        new
                        {
                            StudentId = 2,
                            Birthday = new DateTime(1998, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mohamed Mahmoud",
                            PhoneNumber = "0120458298",
                            RegisteredOn = new DateTime(2024, 2, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(5493)
                        },
                        new
                        {
                            StudentId = 3,
                            Birthday = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ahmed Mahmoud",
                            PhoneNumber = "0100458400",
                            RegisteredOn = new DateTime(2024, 2, 26, 2, 20, 7, 286, DateTimeKind.Local).AddTicks(5498)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Homework", b =>
                {
                    b.HasOne("P01_StudentSystem.Models.Course", "Course")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.Models.Student", "Student")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Resource", b =>
                {
                    b.HasOne("P01_StudentSystem.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.StudentCourse", b =>
                {
                    b.HasOne("P01_StudentSystem.Models.Course", "Course")
                        .WithMany("StudentsEnrolled")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.Models.Student", "Student")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Course", b =>
                {
                    b.Navigation("HomeworkSubmissions");

                    b.Navigation("Resources");

                    b.Navigation("StudentsEnrolled");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Student", b =>
                {
                    b.Navigation("CourseEnrollments");

                    b.Navigation("HomeworkSubmissions");
                });
#pragma warning restore 612, 618
        }
    }
}
